import os
import time
from colorama import Fore, init
import sys
import webbrowser

# Colorama ржЗржирж┐рж╢рж┐рзЯрж╛рж▓рж╛ржЗржЬ
init(autoreset=True)

# ASCII ржЯрзЗржХрзНрж╕ржЯ ржмрзНржпрж╛ржирж╛рж░ ржкрзНрж░ржжрж░рзНрж╢ржи
def print_banner():
    print(Fore.CYAN + """
тФПтФБтФБтФБтФУтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФПтФУтФАтФПтФУтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФПтФБтФБтФБтФУ
тФГтФПтФБтФУтФГтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФГтФГтФАтФГтФГтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФГтФПтФБтФУтФГ
тФГтФГтФАтФГтФГтФПтФБтФБтФУтФПтФБтФБтФУтФПтФБтФБтФУтФГтФЧтФБтФЫтФГтФПтФУтФПтФУтФПтФБтФБтФУтФПтФУтФПтФУтФГтФЧтФБтФБтФУ
тФГтФЧтФБтФЫтФГтФГтФПтФУтФГтФГтФПтФУтФГтФГтФПтФУтФГтФЧтФБтФУтФПтФЫтФГтФЧтФЫтФГтФГтФПтФУтФГтФГтФГтФГтФГтФЧтФБтФБтФУтФГ
тФГтФПтФБтФУтФГтФГтФГтФГтФГтФГтФЧтФЫтФГтФГтФГтФГтФГтФПтФБтФЫтФГтФАтФГтФГтФГтФГтФГтФЧтФЫтФГтФГтФЧтФЫтФГтФГтФЧтФБтФЫтФГ
тФЧтФЫтФБтФЧтФЫтФЧтФЫтФЧтФЫтФЧтФБтФБтФЫтФЧтФЫтФЧтФЫтФЧтФБтФБтФЫтФАтФЧтФ╗тФ╗тФЫтФЧтФБтФБтФЫтФЧтФБтФБтФЫтФЧтФБтФБтФБтФЫ
тФПтФБтФУтФПтФБтФУтФАтФАтФАтФАтФПтФБтФБтФБтФУ
тФЧтФУтФЧтФЫтФПтФЫтФАтФАтФАтФАтФГтФПтФБтФУтФГ
тФАтФЧтФУтФПтФЫтФАтФПтФБтФБтФУтФГтФЧтФБтФЫтФГ
тФАтФПтФЫтФЧтФУтФАтФГтФПтФУтФГтФГтФПтФУтФПтФЫ
тФПтФЫтФПтФУтФЧтФУтФГтФЧтФЫтФГтФГтФГтФГтФЧтФУ
тФЧтФБтФЫтФЧтФБтФЫтФЧтФБтФБтФЫтФЧтФЫтФЧтФБтФЫ
тФПтФБтФБтФБтФУтФПтФБтФБтФБтФУтФПтФБтФБтФБтФУтФПтФБтФБтФБтФУтФПтФУтФАтФАтФПтФУтФПтФБтФБтФБтФУтФПтФБтФБтФБтФБтФУ
тФЧтФУтФПтФУтФГтФГтФПтФБтФБтФЫтФГтФПтФБтФУтФГтФГтФПтФБтФУтФГтФГтФЧтФУтФПтФЫтФГтФГтФПтФБтФУтФГтФГтФПтФУтФПтФУтФГ
тФАтФГтФГтФГтФГтФГтФЧтФБтФБтФУтФГтФГтФАтФЧтФЫтФГтФЧтФБтФЫтФГтФЧтФУтФЧтФЫтФПтФЫтФГтФЧтФБтФЫтФГтФЧтФЫтФГтФГтФЧтФЫ
тФАтФГтФГтФГтФГтФГтФПтФБтФБтФЫтФГтФГтФАтФПтФУтФГтФПтФУтФПтФЫтФАтФЧтФУтФПтФЫтФАтФГтФПтФБтФБтФЫтФАтФАтФГтФГтФАтФА
тФПтФЫтФЧтФЫтФГтФГтФЧтФБтФБтФУтФГтФЧтФБтФЫтФГтФГтФГтФГтФЧтФУтФАтФАтФГтФГтФАтФАтФГтФГтФАтФАтФАтФАтФАтФГтФГтФАтФА
тФЧтФБтФБтФБтФЫтФЧтФБтФБтФБтФЫтФЧтФБтФБтФБтФЫтФЧтФЫтФЧтФБтФЫтФАтФАтФЧтФЫтФАтФАтФЧтФЫтФАтФАтФАтФАтФАтФЧтФЫтФАтФА    """)
    print()  # ржирждрзБржи рж▓рж╛ржЗржи

# XOR ржбрж┐ржХрзНрж░рж┐ржкрж╢ржи ржлрж╛ржВрж╢ржи
def xor_decrypt(file_path, key, output_path):
    try:
        with open(file_path, "rb") as f:
            data = f.read()

        # XOR ржбрж┐ржХрзНрж░рж┐ржкрж╢ржи
        decrypted_data = bytes([b ^ (key % 256) for b in data])

        # ржбрж┐ржХрзНрж░рж┐ржкрзНржЯрзЗржб ржлрж╛ржЗрж▓ ржЖржЙржЯржкрзБржЯрзЗ рж▓рж┐ржЦрзБржи
        with open(output_path, "wb") as f:
            f.write(decrypted_data)

        # рж╕ржлрж▓ ржбрж┐ржХрзНрж░рж┐ржкрж╢ржи ржорзЗрж╕рзЗржЬ ржжрзБржЗ рж▓рж╛ржЗржирзЗ
        print()
        print()  # ржирждрзБржи рж▓рж╛ржЗржи
        print(Fore.GREEN + f"сОаЁЭЩ┤ЁЭЩ▓ЁЭЪБЁЭЪИЁЭЩ┐ЁЭЪГЁЭЩ┤ЁЭЩ│ сПЪЁЭЪДЁЭЩ▓ЁЭЩ▓ЁЭЩ┤ЁЭЪВЁЭЪВЁЭЩ╡ЁЭЪДЁЭЩ╗ЁЭЩ╗ЁЭЪИ ЁЯе│")
        print()
        print(Fore.GREEN + f"ЁЯТ╛ сПЪЁЭЩ░ЁЭЪЕЁЭЩ┤ сОвЁЭЩ╛:тЖТ{output_path}")
        print()  # ржирждрзБржи рж▓рж╛ржЗржи

    except Exception as e:
        print(Fore.RED + f"сО│сОвсО░ сОк сОмсПТсПТсПлсПТ тЭЧ: {e}")
        print()  # ржирждрзБржи рж▓рж╛ржЗржи

# ржЗржЙржЬрж╛рж░ ржерзЗржХрзЗ XOR ржХрзА ржЗржиржкрзБржЯ ржирж┐ржи
def get_key():
    while True:
        try:
            print(Fore.YELLOW + "ЁЯФС сОмЁЭЩ╜ЁЭЪГЁЭЩ┤ЁЭЪБ ЁРТОсПлсПТ сПжЁЭЩ┤ЁЭЪИ : ", end="")  # ржирждрзБржи рж▓рж╛ржЗржирзЗ ржкрзНрж░ржорзНржкржЯ ржжрзЗржЦрж╛ржи
            key = input().strip()  # ржЗржиржкрзБржЯ ржирзЗржУрзЯрж╛
            if key.lower() == 'q':  # 'q' ржкрзНрж░рзЗрж╕ ржХрж░рж▓рзЗ ржкрзНрж░рзЛржЧрзНрж░рж╛ржо ржмржирзНржз
                print(Fore.RED + "сПЪЁЭЩ▓ЁЭЪБЁЭЩ╕ЁЭЩ┐ЁЭЪГ сПЯЁЭЩ╗ЁЭЩ╛ЁЭЪВЁЭЩ╕ЁЭЩ╜ЁЭЩ╢...")
                exit()  # ржкрзНрж░рзЛржЧрзНрж░рж╛ржо ржмржирзНржз
            else:
                return int(key)  # ржХрзА рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рзБржи
        except ValueError:
            print(Fore.RED + "сОоЁЭЩ╗ЁЭЪЙ сОмЁЭЩ╜ЁЭЪГЁЭЩ┤ЁЭЪБ сОк сПЩЁЭЩ░ЁЭЩ╗ЁЭЩ╕ЁЭЩ│ сПжЁЭЩ┤ЁЭЪИ тЭЧ")
            print()  # ржирждрзБржи рж▓рж╛ржЗржи

# ржлрж╛ржЗрж▓ ржкрж╛рже ржЗржиржкрзБржЯ ржирж┐ржи ржПржмржВ ржЪрзЗржХ ржХрж░рзБржи
def get_file_path():
    default_path = '/storage/emulated/0/MT2/apks/'  # ржбрж┐ржлрж▓рзНржЯ ржкрж╛рже
    while True:
        # ржЗржЙржЬрж╛рж░рзЗрж░ ржЬржирзНржп ржкрж╛ржерзЗрж░ ржкрзНрж░ржорзНржкржЯ ржжрзЗржЦрж╛ржирзЛ
        print(Fore.YELLOW + f"ЁЯУВ сОмЁЭЩ╜ЁЭЪГЁЭЩ┤ЁЭЪБ сОйЁЭЩ╛ЁЭЪДЁЭЪБ сОоЁЭЩ░ЁЭЪГЁЭЩ╖: ", end="")  
        file_path = input().strip()  # ржЗржиржкрзБржЯ ржирзЗржУрзЯрж╛
        print()  # ржирждрзБржи рж▓рж╛ржЗржи
        
        if file_path.lower() == "q":  # ржЗржЙржЬрж╛рж░ ржпржжрж┐ 'q' ржЯрж╛ржЗржк ржХрж░рзЗ
            print(Fore.RED + "сПЪЁЭЩ▓ЁЭЪБЁЭЩ╕ЁЭЩ┐ЁЭЪГ сПЯЁЭЩ╗ЁЭЩ╛ЁЭЪВЁЭЩ╕ЁЭЩ╜ЁЭЩ╢...")
            exit()  # ржкрзНрж░рзЛржЧрзНрж░рж╛ржо ржмржирзНржз
        
        # ржпржжрж┐ ржЗржЙржЬрж╛рж░ ржкрж╛рже ржирж╛ ржжрзЗржи, ржбрж┐ржлрж▓рзНржЯ ржкрж╛рже рж╕рзЗржЯ ржХрж░рзБржи
        if not file_path:
            file_path = default_path  # ржбрж┐ржлрж▓рзНржЯ ржкрж╛рже

        # ржлрж╛ржЗрж▓ ржкрж╛рже ржЪрзЗржХ ржХрж░рж╛ ржПржмржВ ржПржЯрж┐ рж╕ржарж┐ржХ ржХрж┐ржирж╛
        if os.path.exists(file_path):
            # ржпржжрж┐ ржПржЯрж┐ ржПржХржЯрж┐ ржбрж┐рж░рзЗржХрзНржЯрж░рж┐ рж╣рзЯ
            if os.path.isdir(file_path):
                print(Fore.RED + "тЪая╕ПсОоЁЭЩ╗ЁЭЩ┤ЁЭЩ░ЁЭЪВЁЭЩ┤ сОмЁЭЩ╜ЁЭЪГЁЭЩ┤ЁЭЪБ сО░ЁЭЪДЁЭЩ╗ЁЭЩ╗ сОоЁЭЩ░ЁЭЪГЁЭЩ╖, сПБЁЭЩ╛ЁЭЪГ сО░ЁЭЩ╛ЁЭЩ╗ЁЭЩ│ЁЭЩ┤ЁЭЪБ сПБЁЭЩ░ЁЭЩ╝ЁЭЩ┤ сПлЁЭЩ╜ЁЭЩ╗ЁЭЪИ")
                print()  # ржирждрзБржи рж▓рж╛ржЗржи
            else:
                return file_path  # рж╕ржарж┐ржХ ржлрж╛ржЗрж▓ ржкрж╛рже ржжрж┐рж▓рзЗ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рзБржи
        else:
            print(Fore.RED + "ЁЯУВ сОмсПБсОвсОмсПТ сОк сПЩсОксПЮсПРсОа сОосОксОвсО╗")
            print()  # ржирждрзБржи рж▓рж╛ржЗржи

# рж▓рзЛржбрж┐ржВ ржПржирж┐ржорзЗрж╢ржи ржлрж╛ржВрж╢ржи (ржПржмрж╛рж░ ржжрзНрж░рзБржд)
def loading_animation():
    print(Fore.YELLOW + "сПЮЁЭЩ╛ЁЭЩ░ЁЭЩ│ЁЭЩ╕ЁЭЩ╜ЁЭЩ╢...", end="\r")
    for _ in range(2):  # рзз рж╕рзЗржХрзЗржирзНржбрзЗрж░ ржоржзрзНржпрзЗ
        print(Fore.YELLOW + "сПЮЁЭЩ╛ЁЭЩ░ЁЭЩ│ЁЭЩ╕ЁЭЩ╜ЁЭЩ╢ .", end="\r")
        time.sleep(0.3)  # рж╕ржорзЯ ржХржорж╛ржирзЛ (0.3 рж╕рзЗржХрзЗржирзНржб)
        print(Fore.YELLOW + "сПЮЁЭЩ╛ЁЭЩ░ЁЭЩ│ЁЭЩ╕ЁЭЩ╜ЁЭЩ╢ ..", end="\r")
        time.sleep(0.3)
        print(Fore.YELLOW + "сПЮЁЭЩ╛ЁЭЩ░ЁЭЩ│ЁЭЩ╕ЁЭЩ╜ЁЭЩ╢ ...", end="\r")
        time.sleep(0.3)
    print(Fore.YELLOW + "сОвЁЭЩ╛ЁЭЩ╛ЁЭЩ╗ЁЭЪВ сПЯЁЭЪБЁЭЩ┤ЁЭЩ░ЁЭЪГЁЭЩ┤ сП┤ЁЭЪИ сПЧЁЭЩ╜ЁЭЩ╛ЁЭЩ╜ЁЭЪИЁЭЩ╝ЁЭЩ╛ЁЭЪДсОж")
    print("-" * 30)  # рж▓ржорзНржмрж╛ рж▓рж╛ржЗржи
    print()  # ржирждрзБржи рж▓рж╛ржЗржи
    print(Fore.GREEN + "сОоЁЭЪБЁЭЩ┤ЁЭЪВЁЭЪВ ЁЭЪА сО░ЁЭЩ╛ЁЭЪБ сОмЁЭЪЗЁЭЩ╕ЁЭЪГ") # ржжрзБржЯрж┐ ржирждрзБржи рж▓рж╛ржЗржи
    print()  
    print(Fore.GREEN + "сОоЁЭЪБЁЭЩ┤ЁЭЪВЁЭЪВ сОмЁЭЩ╜ЁЭЪГЁЭЩ┤ЁЭЪБ сО░ЁЭЩ╛ЁЭЪБ сОаЁЭЩ┤ЁЭЩ╡ЁЭЩ░ЁЭЪДЁЭЩ╗ЁЭЪГ сОоЁЭЩ░ЁЭЪГЁЭЩ╖")
    print("-" * 30)  # ржЖрж░рзЗржХржЯрж┐ рж▓ржорзНржмрж╛ рж▓рж╛ржЗржи
    print()  # ржирждрзБржи рж▓рж╛ржЗржи

# ржЯрж╛рж░рзНржорж┐ржирж╛рж▓ ржХрзНрж▓рж┐рзЯрж╛рж░ ржХрж░рж╛рж░ ржлрж╛ржВрж╢ржи
def clear_terminal():
    os.system('clear' if os.name == 'posix' else 'cls')

# ржЯрзЗрж▓рж┐ржЧрзНрж░рж╛ржо ржЪрзНржпрж╛ржирзЗрж▓ рж▓рж┐ржВржХ ржУржкрзЗржи ржХрж░рж╛
def open_telegram_channel():
    # ржЖржкржирж╛рж░ ржЪрзНржпрж╛ржирзЗрж▓рзЗрж░ URL ржПржЦрж╛ржирзЗ ржжрж┐ржи
    telegram_link = "https://t.me/Anonymous_Raihan"
    print(Fore.YELLOW + f"\n{telegram_link}")  # рж╢рзБржзрзБржорж╛рждрзНрж░ рж▓рж┐ржВржХ ржкрзНрж░ржжрж░рзНрж╢ржи
    webbrowser.open(telegram_link)  # рж▓рж┐ржВржХржЯрж┐ ржУржкрзЗржи ржХрж░рж╛

def main():
    # ржЯрж╛рж░рзНржорж┐ржирж╛рж▓ ржХрзНрж▓рж┐рзЯрж╛рж░ ржХрж░рж╛
    clear_terminal()

    # ASCII ржмрзНржпрж╛ржирж╛рж░ ржкрзНрж░ржжрж░рзНрж╢ржи
    print_banner()

    # ржЯрзЗрж▓рж┐ржЧрзНрж░рж╛ржо ржЪрзНржпрж╛ржирзЗрж▓ рж▓рж┐ржВржХ ржкрзНрж░ржжрж░рзНрж╢ржи
    open_telegram_channel()  # ржЪрзНржпрж╛ржирзЗрж▓ рж▓рж┐ржВржХ ржжрзЗржЦрж╛ржмрзЗ ржПржмржВ ржУржкрзЗржи ржХрж░ржмрзЗ
    print()  # ржирждрзБржи рж▓рж╛ржЗржи

    # рж▓рзЛржбрж┐ржВ ржПржирж┐ржорзЗрж╢ржи ржжрзЗржЦрж╛ржи
    loading_animation()
    
    # ржЗржЙржЬрж╛рж░ ржерзЗржХрзЗ ржлрж╛ржЗрж▓ ржкрж╛рже ржирзЗржУрзЯрж╛
    file_path = get_file_path()

    # ржлрж╛ржЗрж▓ ржкрж╛рже ржкрж╛ржУрзЯрж╛ ржЧрзЗрж▓рзЗ
    if file_path:
        # ржЗржЙржЬрж╛рж░ ржерзЗржХрзЗ XOR ржХрзА ржирзЗржУрзЯрж╛
        key = get_key()

        # ржЖржЙржЯржкрзБржЯ ржкрж╛рже ржпрзЗржЦрж╛ржирзЗ ржбрж┐ржХрзНрж░рж┐ржкрзНржЯ ржХрж░рж╛ ржлрж╛ржЗрж▓ рж╕рзЗржн рж╣ржмрзЗ
        output_path = os.path.join(os.path.dirname(file_path), "anonymous_decrypt.apk")

        # ржбрж┐ржХрзНрж░рж┐ржкрзНржЯ ржлрж╛ржВрж╢ржи ржХрж▓ ржХрж░рж╛
        xor_decrypt(file_path, key, output_path)

if __name__ == "__main__":
    main()